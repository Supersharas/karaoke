"""empty message

Revision ID: c13000c832a1
Revises: caa8dd653c8e
Create Date: 2021-06-07 09:04:54.093879

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c13000c832a1'
down_revision = 'caa8dd653c8e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('offers')
    op.drop_table('states')
    op.drop_table('games')
    op.drop_table('players')
    op.add_column('songs', sa.Column('name', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('songs', 'name')
    op.create_table('players',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('players_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('random', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('pick', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='players_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('games',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('games_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('player_one', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_two', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('winner', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('offer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['player_one'], ['players.id'], name='games_player_one_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_two'], ['players.id'], name='games_player_two_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='games_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('states',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('move_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('move', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('position', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('black_timer', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('white_timer', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('time_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='states_game_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='states_pkey')
    )
    op.create_table('offers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('player_one', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('public', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('time_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['player_one'], ['players.id'], name='offers_player_one_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='offers_pkey')
    )
    # ### end Alembic commands ###
